<?xml version="1.0" encoding="utf-8"?>
<!-- $Id$ 
     $Date$
     $Revision$ -->
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:ui="edu.isi.bmkeg.kefed.editor.ui.*"
	xmlns:persevere="edu.isi.bmkeg.kefed.editor.ui.persevere.*"
	xmlns:connectivity="edu.isi.bmkeg.domains.neuralconnectivity.*"
	xmlns:powerloom="edu.isi.bmkeg.kefed.editor.utils.powerloom.*"
	xmlns:kapit="edu.isi.bmkeg.kefed.editor.ui.kapit.*"
	preinitialize="DiagramMappings.initializeMappings();"
	initialize="init();"
	viewSourceURL="srcview/index.html">
	
	<mx:XML id="configuration" source="configuration.xml"/>
    <mx:Model id="license" source="licenses.xml"/>

    <mx:Script>
		<![CDATA[
			import edu.isi.bmkeg.kefed.editor.ui.UiUtil;
			import mx.managers.IBrowserManager;
			import mx.managers.BrowserManager;
			import edu.isi.bmkeg.kefed.editor.store.elasticSearch.ElasticSearchDataStore;
			import edu.isi.bmkeg.kefed.editor.store.elasticSearch.ElasticSearchModelStore;
			import edu.isi.bmkeg.kefed.editor.store.IDataStore;
			import edu.isi.bmkeg.kefed.editor.store.IModelStore;
			import mx.collections.ArrayCollection;
			import mx.rpc.events.FaultEvent;
			import mx.controls.Alert;
			import mx.utils.URLUtil;
		
			import edu.isi.bmkeg.kefed.editor.utils.Parameters;
			import edu.isi.bmkeg.kefed.editor.elements.KefedModel;
			import edu.isi.bmkeg.kefed.editor.elements.KefedObject;
			import edu.isi.bmkeg.kefed.editor.ui.kapit.DiagramMappings;    
        	import com.kapit.diagram.library.SVGAssetLibrary;
			import edu.isi.bmkeg.kefed.editor.app.KefedAppEventDispatcher;
			import edu.isi.bmkeg.kefed.editor.app.KefedAppEvent;

			import edu.isi.bmkeg.kefed.editor.ontology.OntologySearchEvent;
			import edu.isi.bmkeg.kefed.editor.ontology.bioportal.NCBOBioPortalInterface;
		
			[Bindable]
			private var demo:Boolean = false;

			[Bindable]
			public var serverUrl:String;
			
			[Bindable]
			public var modelStore:IModelStore = null;
			
			[Bindable]
			public var schemaStore:IModelStore = null;
			
			[Bindable]
			public var dataStore:IDataStore = null;
        			
			public var config:Parameters;
			public var model:KefedModel;
			public var eventDispatcher:KefedAppEventDispatcher = new KefedAppEventDispatcher;
			public var lib:SVGAssetLibrary;
			
			private var version:String = "$Revision$";
			private var nbco:NCBOBioPortalInterface = new NCBOBioPortalInterface(); 
			public var ontologyList:ArrayCollection = new ArrayCollection();
			public var selectedOntologies:Array = new Array();

			private function init():void {
				UiUtil.agreeToLicense(license.key, license.license);
				if (serverUrl==null) {
					serverUrl = URLUtil.getProtocol(this.url) + "://"
				 	         + URLUtil.getServerNameWithPort(this.url) + "/";
				}
				trace(this.name + " serverURL = " + serverUrl);
				config = new Parameters(configuration);
				
				// Setup the URLs for the various persistent storage mechanisms.
				// Since the schemaStore is optional, it gets a null default value.
				var modelStoreUrl:String = config.getValue("modelStoreUrl", "persevere/KefedModel");
				var schemaStoreUrl:String = config.getValue("schemaStoreUrl", null);
				var dataStoreUrl:String = config.getValue("dataStoreUrl", "persevere/KefedModel");
				
				modelStoreUrl = URLUtil.getFullURL(serverUrl, modelStoreUrl);
				modelStore = new ElasticSearchModelStore(modelStoreUrl);			
				/*if (schemaStoreUrl != null) {
					schemaStoreUrl = URLUtil.getFullURL(serverUrl, schemaStoreUrl);
					schemaStore = new YogoModelStore(schemaStoreUrl);
				}*/
				dataStoreUrl = URLUtil.getFullURL(serverUrl, dataStoreUrl);
				dataStore = new ElasticSearchDataStore(dataStoreUrl);

				//  Setup up webservice for NCBO ontology lookup
				nbco.addEventListener(OntologySearchEvent.LIST_ONTOLOGIES, ncboListOntologiesEventHandler);
				nbco.addEventListener(FaultEvent.FAULT, FaultEventHandler);					
				nbco.ncboListOntologies();
				
				currentState = "Dashboard_State";
				Application.application.setFocus();
			}
			
			private function ncboListOntologiesEventHandler(event:OntologySearchEvent):void {			
                this.ontologyList = event.searchResults;
                this.eventDispatcher.dispatchBioScholarEvent(KefedAppEvent.ONTOLOGY_LIST_LOADED);
	  		}	
			
			private function FaultEventHandler(event:FaultEvent):void {
				Alert.show(event.message.toString());				
			}
			
			public function getOntologyList():String {
				var separator:String = "";
				var s:String = "All";
				if (selectedOntologies.length > 0) {
					s = "";
					for (var ontology:Object in selectedOntologies) {
						s += separator + ontology.abbreviation;
						separator = ", ";
					}
				}
				return s;
			}

		]]>
	</mx:Script>

	<mx:states>
	
		<mx:State name="Dashboard_State">
			<mx:RemoveChild target="{information}"/>
			<mx:AddChild relativeTo="{top}">
				<connectivity:NeuralConnectivityNavigator label="Dashboard" id="inventory" height="100%" width="100%"
					modelStore="{modelStore}" dataStore="{dataStore}" schemaStore="{schemaStore}"
					createAllowed="{!demo}" deleteAllowed="{!demo}"/>
			</mx:AddChild>	
		</mx:State>
	
		<mx:State name="Design_State">
			<mx:RemoveChild target="{information}"/>
			<mx:AddChild relativeTo="{top}">
				<ui:DesignerComponent label="Design" id="designer" height="100%" width="100%"
					saveAllowed="{!demo}"/>
			</mx:AddChild>	
		</mx:State>
	
		<mx:State name="ExperimentData_State">
			<mx:RemoveChild target="{information}"/>
			<mx:AddChild relativeTo="{top}">
				<ui:SpreadsheetComponent label="Data" id="spreadsheet" height="100%" width="100%"
					saveAllowed="{!demo}"/>
			</mx:AddChild>	
		</mx:State>

		<mx:State name="JSONform">
			<mx:RemoveChild target="{information}"/>
			<mx:AddChild relativeTo="{top}">
				<persevere:PersevereJSONForm label="json" id="json" height="100%" width="100%"/>
			</mx:AddChild>	
		</mx:State>
	
	<!-- This is broken.  It needs updating to new data storage format.  Therefore disabled.
		<mx:State name="Batch_State">
			<mx:RemoveChild target="{information}"/>
			<mx:AddChild relativeTo="{top}">
				<persevereUI:PersevereDataForm label="batch" id="batch" height="100%" width="100%"/>
			</mx:AddChild>	
		</mx:State>
		-->
		
		<mx:State name="Connectivity_State">
			<mx:RemoveChild target="{information}"/>
			<mx:AddChild relativeTo="{top}">
				<connectivity:NeuralConnectivity label="connectivity" id="connectivity" height="100%" width="100%"/>
			</mx:AddChild>	
		</mx:State>
		
		<mx:State name="PowerLoomForm">
			<mx:RemoveChild target="{information}"/>
			<mx:AddChild relativeTo="{top}">
				<powerloom:PowerLoom label="powerloom" id="powerloom" height="100%" width="100%"/>
			</mx:AddChild>	
		</mx:State>

	</mx:states>

	<mx:VBox id="top" height="100%" width="100%">
		<ui:CreditBox id="information" height="100%" width="100%"/>
	</mx:VBox>
	
</mx:Application>
